/*!
 * VERSION: 0.1.1
 * DATE: 2016-08-16
 * UPDATES AND DOCS AT: http://greensock.com
 *
 * @license Copyright (c) 2008-2016, GreenSock. All rights reserved.
 * DrawSVGPlugin is a Club GreenSock membership benefit; You must have a valid membership to use
 * this code without violating the terms of use. Visit http://greensock.com/club/ to sign up or get more details.
 * This work is subject to the software agreement that was issued with your membership.
 * 
 * @author: Jack Doyle, jack@greensock.com
 */
var _gsScope = "undefined" != typeof module && module.exports && "undefined" != typeof global ? global : this || window;
(_gsScope._gsQueue || (_gsScope._gsQueue = [])).push(function() {
        "use strict";

        function a(a, b, c, d, e, f) {
            return c = (parseFloat(c) - parseFloat(a)) * e,
                d = (parseFloat(d) - parseFloat(b)) * f,
                Math.sqrt(c * c + d * d)
        }

        function b(a) {
            return "string" != typeof a && a.nodeType || (a = _gsScope.TweenLite.selector(a),
                    a.length && (a = a[0])),
                a
        }

        function c(a, b, c) {
            var d, e, f = a.indexOf(" ");
            return -1 === f ? (d = void 0 !== c ? c + "" : a,
                    e = a) : (d = a.substr(0, f),
                    e = a.substr(f + 1)),
                d = -1 !== d.indexOf("%") ? parseFloat(d) / 100 * b : parseFloat(d),
                e = -1 !== e.indexOf("%") ? parseFloat(e) / 100 * b : parseFloat(e),
                d > e ? [e, d] : [d, e]
        }

        function d(c) {
            if (!c)
                return 0;
            c = b(c);
            var d, e, f, g, i, j, k, l = c.tagName.toLowerCase(),
                m = 1,
                n = 1;
            if ("non-scaling-stroke" === c.getAttribute("vector-effect") && (n = c.getScreenCTM(),
                    m = n.a,
                    n = n.d),
                "path" === l) {
                g = c.style.strokeDasharray,
                    c.style.strokeDasharray = "none",
                    d = c.getTotalLength() || 0,
                    m !== n && console.log("Warning: <path> length cannot be measured accurately when vector-effect is non-scaling-stroke and the element isn't proportionally scaled."),
                    d *= (m + n) / 2;
                try {
                    e = c.getBBox()
                } catch (o) {}
                c.style.strokeDasharray = g
            } else if ("rect" === l)
                d = 2 * c.getAttribute("width") * m + 2 * c.getAttribute("height") * n;
            else if ("line" === l)
                d = a(c.getAttribute("x1"), c.getAttribute("y1"), c.getAttribute("x2"), c.getAttribute("y2"), m, n);
            else if ("polyline" === l || "polygon" === l)
                for (f = c.getAttribute("points").match(h) || [],
                    "polygon" === l && f.push(f[0], f[1]),
                    d = 0,
                    i = 2; i < f.length; i += 2)
                    d += a(f[i - 2], f[i - 1], f[i], f[i + 1], m, n) || 0;
            else
                ("circle" === l || "ellipse" === l) && (j = parseFloat(c.getAttribute("circle" === l ? "r" : "rx")) * m,
                    k = parseFloat(c.getAttribute("circle" === l ? "r" : "ry")) * n,
                    d = Math.PI * (3 * (j + k) - Math.sqrt((3 * j + k) * (j + 3 * k))));
            return d || 0
        }

        function e(a, c) {
            if (!a)
                return [0, 0];
            a = b(a),
                c = c || d(a) + 1;
            var e = g(a),
                f = e.strokeDasharray || "",
                h = parseFloat(e.strokeDashoffset),
                i = f.indexOf(",");
            return 0 > i && (i = f.indexOf(" ")),
                f = 0 > i ? c : parseFloat(f.substr(0, i)) || 1e-5,
                f > c && (f = c), [Math.max(0, -h), Math.max(0, f - h)]
        }
        var f, g = document.defaultView ? document.defaultView.getComputedStyle : function() {},
            h = /(?:(-|-=|\+=)?\d*\.?\d*(?:e[\-+]?\d+)?)[0-9]/gi;
        f = _gsScope._gsDefine.plugin({
                propName: "drawSVG",
                API: 2,
                version: "0.1.1",
                global: !0,
                overwriteProps: ["drawSVG"],
                init: function(a, b, f, g) {
                    if (!a.getBBox)
                        return !1;
                    var h, i, j, k = d(a) + 1;
                    return this._style = a.style,
                        "function" == typeof b && (b = b(g, a)),
                        b === !0 || "true" === b ? b = "0 100%" : b ? -1 === (b + "").indexOf(" ") && (b = "0 " + b) : b = "0 0",
                        h = e(a, k),
                        i = c(b, k, h[0]),
                        this._length = k + 10,
                        0 === h[0] && 0 === i[0] ? (j = Math.max(1e-5, i[1] - k),
                            this._dash = k + j,
                            this._offset = k - h[1] + j,
                            this._addTween(this, "_offset", this._offset, k - i[1] + j, "drawSVG")) : (this._dash = h[1] - h[0] || 1e-6,
                            this._offset = -h[0],
                            this._addTween(this, "_dash", this._dash, i[1] - i[0] || 1e-5, "drawSVG"),
                            this._addTween(this, "_offset", this._offset, -i[0], "drawSVG")), !0
                },
                set: function(a) {
                    this._firstPT && (this._super.setRatio.call(this, a),
                        this._style.strokeDashoffset = this._offset,
                        1 === a || 0 === a ? this._style.strokeDasharray = this._offset < .001 && this._length - this._dash <= 10 ? "none" : this._offset === this._dash ? "0px, 999999px" : this._dash + "px," + this._length + "px" : this._style.strokeDasharray = this._dash + "px," + this._length + "px")
                }
            }),
            f.getLength = d,
            f.getPosition = e
    }),
    _gsScope._gsDefine && _gsScope._gsQueue.pop()(),
    function(a) {
        "use strict";
        var b = function() {
            return (_gsScope.GreenSockGlobals || _gsScope)[a]
        };
        "function" == typeof define && define.amd ? define(["TweenLite"], b) : "undefined" != typeof module && module.exports && (require("../TweenLite.js"),
            module.exports = b())
    }("DrawSVGPlugin");